# TODO double check permissions - AWS
# TODO where would/how would we like to promote images, use similar workflow from GP2GP repos?
name: Build & Publish EHR Repository

on:
  push:
    branches:
      - main
    paths:
      - 'services/ehr-repo/**'

  workflow_call:
    inputs:
      environment:
        default: "dev"
        type: string

permissions:
  contents: read  # Required for actions/checkout
  id-token: write # Required for requesting the JWT
  pull-requests: write # Required to write comments

jobs:
  test:
    uses: ./.github/workflows/test-ecr-repo.yml

  build_and_publish:
    name: Build & Publish
    runs-on: ubuntu-latest
    needs: [test]
    defaults:
      run:
        working-directory: './services/ehr-repo'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Clean install
        run: npm ci

      - name: build
        run: npm run build

      - name: Configure AWS Credentials (Read Write)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ECR_HOLDING_ACCOUNT_READ_WRITE }}
          aws-region: ${{ var.AWS_REGION }}
          mask-aws-account-id: true

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get docker tags
        id: get-tags
        run: |
          sha=$(echo ${{ github.sha }} | cut -c 1-8)
          echo "sha=$sha" >> $GITHUB_OUTPUT
          branchname=$(echo ${{ github.ref_name }}${{ github.head_ref }} | sed 's/^[0-9]*\/merge//g')
          echo "branchname=$branchname" >> $GITHUB_OUTPUT

      - name: docker build, tag, and publish
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          SHA_TAG: ${{ steps.get-tags.outputs.sha }}
          BRANCH_TAG: ${{ steps.get-tags.outputs.branchname }}
          NHS_ENVIRONMENT: ${{ inputs.environment }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$SHA_TAG -t $REGISTRY/$REPOSITORY:$BRANCH_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:$SHA_TAG $REGISTRY/$REPOSITORY:$BRANCH_TAG $REGISTRY/$REPOSITORY:latest
# TODO do we want to build the image here?

  deploy_infra:
    name: Deploy EHR Infrastructure
    runs-on: ubuntu-latest
    needs: [build_and_publish]

# TODO once renaming of repositories and moving of Github org, this step will need adjusting to reflect repo change
    steps:
      - name: Checkout Infra
        uses: actions/checkout@v5
        with:
          repository: 'nhsconnect/prm-deductions-infra'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ECR_HOLDING_ACCOUNT_READ_WRITE }}
          aws-region: ${{ var.AWS_REGION }}
          mask-aws-account-id: true

      - name: Deploy Infrastructure
        uses: ./.github/workflows/deploy-stack.yml
        with:
          stack: ehr-repo
          environment: ${{ inputs.environment }}
          is_deplyoment: true


  end_to_end_test:
    name: End to End Test
    runs-on: ubuntu-latest
    needs: [deploy_infra]

    steps:
      - name: Checkout End to End
        uses: actions/checkout@v5
        with:
          repository: 'nhsconnect/prm-repo-e2e-tests'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ECR_HOLDING_ACCOUNT_READ_WRITE }}
          aws-region: ${{ var.AWS_REGION }}
          mask-aws-account-id: true

      - name: Build
        run: |
          ./gradlew build

      - name: Run End to End tests
        run: |
          gradle test --tests "uk.nhs.prm.e2etests.test.RepositoryE2ETest"