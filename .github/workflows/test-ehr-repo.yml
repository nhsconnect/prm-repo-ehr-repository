name: Test ECR Repository

on:
  workflow_call:

  pull_request:
    branches:
      - main
    paths:
      - '../../services/ehr-repo/**'

permissions:
  contents: read  # Required for actions/checkout
  id-token: write # Required for requesting the JWT
  pull-requests: write # Required to write comments

env:
  S3_BUCKET_NAME: test-bucket
  LOCALSTACK_URL: http://localhost:4566
  DYNAMODB_NAME: local-test-db
  DYNAMODB_LOCAL_ENDPOINT: http://localhost:4566
  # LSIA... keys are valid for localstack
  AWS_ACCESS_KEY_ID: LSIA5678901234567890
  AWS_SECRET_ACCESS_KEY: LSIA5678901234567890
  SERVICE_URL: http://localhost:3000

jobs:
#  TODO npm run test runs eslint and fix already...
  eslint:
    name: ESLint
    defaults:
      run:
        working-directory: './services/ecr-repo'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - run: npm install eslint

      - name: ESLint
        run: npm run lint


  unit_test:
    name: Unit Test
    defaults:
      run:
        working-directory: './services/ecr-repo'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Clean install
        run: npm ci

      - name: Run Unit Tests
        run: npm run test


  integration_test:
    name: Integration Test
    needs: [eslint]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './services/ecr-repo'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Clean install
        run: npm ci

      - name: Start LocalStack
        uses: LocalStack/setup-localstack@v0.2.4
        with:
          install-awslocal: 'true'

      # https://docs.aws.amazon.com/cli/latest/reference/dynamodb/create-table.html
      - name: Create AWS resources
        run: |
          awslocal dynamodb create-table --region ${{ vars.AWS_REGION }} --cli-input-json file://scripts/local-test-db-scheme.json --no-cli-page
          awslocal s3 mb s3://$S3_BUCKET_NAME --region ${{ vars.AWS_REGION }}}

      - name: Run Integration Test
        run: npm run test:integration


  sonarcloud:
    name: SoundCloud scan
    runs-on: ubuntu-latest
    steps:
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
